name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        # os: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14.17.1

      # https://github.com/samuelmeuli/action-electron-builder
      # https://samuelmeuli.com/blog/2019-12-28-notarizing-your-electron-app/
      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8

      # https://github.com/jsoma/action-electron-forge
      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}

          build_script_name: fetch

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: true
          # release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          # macOS notarization API key
          API_KEY_ID: ${{ secrets.api_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.api_key_issuer_id }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get latest draft
        id: get_latest_draft
        uses: mpaulweeks/get-latest-draft@v1.0
        with:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Publish the draft
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          release_id: ${{ steps.get_latest_draft.outputs.id }}
