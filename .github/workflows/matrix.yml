name: Matrix Test

on:
  workflow_dispatch:

jobs:
  # https://stackoverflow.com/a/65434401
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Export matrix.json
        id: set-matrix
        run: |
          matrix=$(cat gh-matrix.json)
          echo $matrix
          echo ::set-output name=matrix::{\"include\":$(echo $matrix)}\"

  build:
    needs: matrix_prep
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Starting ${{ matrix.label }}
        run: |
          echo "electron-builder-args: ${{ matrix.electron-builder-args }}"

      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14.17.1

      # https://github.com/samuelmeuli/action-electron-builder
      # https://samuelmeuli.com/blog/2019-12-28-notarizing-your-electron-app/
      - name: Prepare for app notarization
        if: startsWith(matrix.runs-on, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8

      # https://github.com/jsoma/action-electron-forge
      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}

          build_script_name: fetch
          args: ${{ matrix.electron-builder-args }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: false
          # release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          # macOS notarization API key
          API_KEY_ID: ${{ secrets.api_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.api_key_issuer_id }}

      - name: List local dir
        run: |
          ls -al
