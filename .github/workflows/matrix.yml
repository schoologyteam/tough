name: Matrix Test

on:
  workflow_dispatch:

jobs:
  # https://stackoverflow.com/a/65434401
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Export matrix.json
        id: set-matrix
        run: |
          matrix=$(cat gh-matrix.json)
          echo $matrix
          echo ::set-output name=matrix::{\"include\":$(echo $matrix)}\"

  build:
    needs: matrix_prep
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Starting ${{ matrix.label }}
        run: |
          echo "electron-builder-args: ${{ matrix.electron-builder-args }}"

      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14.17.1

      # https://github.com/samuelmeuli/action-electron-builder
      # https://samuelmeuli.com/blog/2019-12-28-notarizing-your-electron-app/
      - name: Prepare for app notarization
        if: startsWith(matrix.runs-on, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8

      # https://github.com/jsoma/action-electron-forge
      - name: Build Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}

          build_script_name: fetch

          # os specific args
          # https://www.electron.build/configuration/win
          # https://www.electron.build/configuration/linux
          args: ${{ matrix.electron-builder-args }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: false
          # release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          # macOS notarization API key
          API_KEY_ID: ${{ secrets.api_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.api_key_issuer_id }}

      # https://levelup.gitconnected.com/github-actions-how-to-share-data-between-jobs-fc1547defc3e
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.cache-key }}
          path: dist/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Set variables
        id: vars
        run: |
          version=$(npx -c 'echo "$npm_package_version"')
          echo ::set-output name=buildDescription::"v$version"

      - name: Tree
        run: tree

      # - name: Download mac artifacts
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: cache-mac
      #     path: electron/mac

      - name: Download windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: cache-windows
          path: electron/windows

      - name: Download linux artifacts
        uses: actions/download-artifact@v3
        with:
          name: cache-linux
          path: electron/linux

      # todo https://github.com/marketplace/actions/delete-run-artifacts

      - name: Tree
        run: tree

      - name: Rename versioned files for distribution
        run: |
          mkdir github
          mkdir github/mac
          mkdir github/windows
          mkdir github/linux
          mkdir steam
          mkdir steam/mac
          mkdir steam/windows
          mkdir steam/linux
          echo "Renaming windows"
          mv "electron/windows/Tough Love Arena Setup *.exe" "github/windows/"
          mv "electron/windows/Tough Love Arena *.exe" "steam/windows/Tough Love Arena.exe"
          echo "Renaming linux"
          mv "electron/linuxTough Love Arena-*.AppImage" "steam/linux/Tough Love Arena.AppImage"
          mv "electron/linux/tough-love-arena_*.snap" "steam/linux/Tough Love Arena.snap"

      - name: Tree
        run: tree

      # - name: Deploy to Steam
      #   uses: game-ci/steam-deploy@v1
      #   with:
      #     appId: ${{ secrets.STEAM_APP_ID }}
      #     username: ${{ secrets.STEAM_USERNAME }}
      #     password: ${{ secrets.STEAM_PASSWORD }}
      #     configVdf: ${{ secrets.STEAM_CONFIG_VDF}}
      #     ssfnFileName: ${{ secrets.STEAM_SSFN_FILE_NAME }}
      #     ssfnFileContents: ${{ secrets.STEAM_SSFN_FILE_CONTENTS }}
      #     buildDescription: ${{ steps.vars.outputs.buildDescription }}
      #     rootPath: electron
      #     # depot1Path: mac
      #     depot2Path: windows
      #     depot3Path: linux
      #     releaseBranch: github
