name: Steam

on:
  workflow_dispatch:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  # https://stackoverflow.com/a/65434401
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Export matrix.json
        id: set-matrix
        run: |
          matrix=$(cat matrix/steam.matrix.json)
          echo $matrix
          echo ::set-output name=matrix::{\"include\":$(echo $matrix)}\"

  build:
    needs: matrix_prep
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Starting ${{ matrix.label }}
        run: |
          echo "electron-builder-args: ${{ matrix.electron-builder-args }}"

      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Prepare Electron app config (Unix)
        if: ${{ !startsWith(matrix.runs-on, 'windows') }}
        run: |
          rm src/appConfig.js
          cp src/${{ matrix.app-config }} src/appConfig.js

      - name: Prepare Electron app config (Windows)
        if: startsWith(matrix.runs-on, 'windows')
        run: |
          rm src/appConfig.js
          copy src/${{ matrix.app-config }} src/appConfig.js

      # https://github.com/samuelmeuli/action-electron-builder
      # https://samuelmeuli.com/blog/2019-12-28-notarizing-your-electron-app/
      - name: Prepare for app notarization
        if: startsWith(matrix.runs-on, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8

      # https://github.com/jsoma/action-electron-forge
      - name: Build Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}

          build_script_name: fetch

          # os specific args
          # https://www.electron.build/configuration/mac
          # https://www.electron.build/configuration/win
          # https://www.electron.build/configuration/linux
          # https://www.electron.build/configuration/publish
          args: ${{ matrix.electron-builder-args }} --publish never

          # use args for release (publish)
          # https://github.com/samuelmeuli/action-electron-builder/blob/master/index.js#L134
          release: false

      # https://levelup.gitconnected.com/github-actions-how-to-share-data-between-jobs-fc1547defc3e
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-key }}
          path: dist/

  # where it diverges from release.yml
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Set variables
        id: vars
        run: |
          version=$(npx -c 'echo "$npm_package_version"')
          echo ::set-output name=version::"$version"
          echo ::set-output name=buildDescription::"v$version"

      - name: Download mac artifacts
        uses: actions/download-artifact@v4
        with:
          name: steam-mac
          path: electron/mac

      - name: Download windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: steam-windows
          path: electron/windows

      - name: Download linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: steam-linux
          path: electron/linux

      # todo https://github.com/marketplace/actions/delete-run-artifacts

      - name: Rename versioned files for distribution
        run: |
          mkdir steam
          mkdir steam/mac
          mkdir steam/windows
          mkdir steam/linux
          echo "Renaming mac"
          mv "electron/mac/Tough Love Arena-${{ steps.vars.outputs.version }}-arm64-mac.zip" "steam/mac/tla.zip"
          echo "Renaming windows"
          mv "electron/windows/Tough Love Arena ${{ steps.vars.outputs.version }}.exe" "steam/windows/Tough Love Arena.exe"
          echo "Renaming linux"
          mv "electron/linux/Tough Love Arena-${{ steps.vars.outputs.version }}.AppImage" "steam/linux/Tough Love Arena.AppImage"

      - name: Unzip mac
        uses: edgarrc/action-7z@v1
        with:
          args: 7z x steam/mac/tla.zip -osteam/mac/

      - name: Cleanup mac zip
        run: |
          rm steam/mac/tla.zip

      - name: Deploy to Steam
        uses: game-ci/steam-deploy@v3
        with:
          appId: ${{ secrets.STEAM_APP_ID }}
          username: ${{ secrets.STEAM_USERNAME }}
          configVdf: ${{ secrets.STEAM_CONFIG_VDF}}
          buildDescription: ${{ steps.vars.outputs.buildDescription }}
          rootPath: steam
          depot1Path: mac
          depot2Path: windows
          depot3Path: linux
          releaseBranch: github
